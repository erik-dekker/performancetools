#!/usr/bin/python

from bcc import BPF
from time import sleep
from subprocess import call
import pwd

bpf_text = """
#include <uapi/linux/ptrace.h>
#include <linux/blkdev.h>

struct key_t {
    u32 uid;
};

BPF_HASH(counts, struct key_t);

int do_count(struct pt_regs *ctx) {
    struct key_t key = {};
    u32 uid = bpf_get_current_uid_gid();
    key.uid = uid & 0xFFFFFFFF;
    counts.increment(key);
    return 0;
}
"""

b = BPF(text=bpf_text)
b.attach_kprobe(event="blk_account_io_done", fn_name="do_count")
clear=1

exiting = 0
while 1:
    try:
        sleep(1)
    except KeyboardInterrupt:
        exiting = 1

    if clear:
        call("clear")
    else:
        print()
    print("%-9s %-6s" % ("UID", "IO"))

    counts = b['counts']

    for k,v in counts.items():
        print("%-9s %-6d" % (pwd.getpwuid(k.uid)[0],v.value))
    counts.clear()

    if exiting:
        print("Detaching..")
        exit()
